Friday: Milestone 3
    --> check your release!

//////////////////////

Implementing a collection

//////////////////////

Nullables

    type? name;

What does it mean? name is allowed to be null

Why use them? will get compiler error if you don't check one for null first



value types can be nullable too (it turns them into a reference type):

    int? a = null;



null condition operator

    Dog? d = (some value)
    d?.Print(); //would call Print only if d not null





///////////////////////

Finish people years unit test

How to choose inline data?

More than one assert per test?

//////////////////////

Kinds of asserts

    Assert.Equal(expected, actual);
    Assert.Equal(expected, actual, decimalPlacesToCheck);

    Assert.True(value);
    Assert.False(value);

    Assert.Contains(expectedItem, collection);

    Assert.All(collection, item => (an assert for current item));

//////////////////////

What to test in Milestone 3?

- should have a separate test class for each data class
    - test default values for all properties whose value can change
        (it is OK if you don't test default for preparation information)


    - test any bounds for properties (which ones?) kids meals


    - test each derived property based on possible configurations
        which ones? 

        Calories, Price, PreparationInformation
        don't have to have more than 8 test cases per unit test


Example: CarnitasBowl
    Carnitas, Queso, PintoBeans - on
    Salsa.Medium
    Veggies, SourCream, Guacamole - off

    what to do for defaults test?
        Assert.True(obj.Carnitas);
        (etc for other toppings)
        make sure salsa choice is Salsa.Medium
        calories - 680
        price - $9.99


    any bounds? no

    what to do for derived properties? what kinds of test cases? theory
        Price
        Calories
        PreparationInformation

        parameters: bools for each topping, salsa, expected value for property

        inline data: all true, all False
        different values for each parameters
        all the different salsas


    What about price (only guac affects price)?
        still test based on different configurations to make sure they 
        DON'T affect it


    how to test preparation information?
        InlineData[(..., new string[]{"Add Sour Cream", "Hold Queso"})]

        param: string[]

        want to make sure that every item in the param array is in the 
            PreparationInformation




Kids meals?
    Defaults (sliders)?
        Count (2)
        Drink choice (not chocolate)
        Side choice (not curly, kids)
        Price $5.99
        (calories) - can just do as derived
        Cheese

    Bounds? Count (2 to 4)
        take bad values as parameters
        make sure count doesn't change after setting to bad

    Derived properties?
        Calories - (cheese), count

        reported calories: ("main" calories) + calories for a side + calories for drink

        assert that kids meal calories really is "main" calories +
                    SideChoice.Calories + DrinkChoice.Calories
